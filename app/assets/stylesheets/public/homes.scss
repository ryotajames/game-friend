// Place all the styles related to the homes controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: https://sass-lang.com/

.howtoplay {
  position: relative;
  z-index: 2;
}

.controller {
  z-index: 2; /* コンテンツは背景の上に表示される */
  opsition: relative;
  flex: center;
  height: 50vh;
  width: 800px;
  background-image: image-url('about.png');
  background-size: 800px 600px;
  background-position: center;
  background-repeat: no-repeat;
  margin: 50px auto 0 auto;
  padding-border-top: 25px;
}

.about-text-body {
  background-color: rgba(0, 0, 0, 0.5);
  width: 500px;
  color: white;
}

.about-text-title {
  color: white;
  font-family: 'game',;
  font-style: italic;
}

.italic {
  font-style: italic;
}

.fadein {
  opacity: 0;
}

$white: #fff;
$blue: #1e90ff;
$green: #39d24a;
$yellow: #ffe244;
$pink: #ff36a3;

.top-top {
  height: 100vh;
  overflow: hidden;
  // I do like these colours
  /* background:
    radial-gradient(circle at bottom, #fff -30%, transparent 70%),
    linear-gradient(to right, #134a8e, #00b6f1 50%),
    #fff; */
  background:
    radial-gradient(circle at bottom, $white, transparent 80%),
    linear-gradient(to top, dodgerblue 0%, transparent 70%),
    linear-gradient(to bottom, transparent, rgba($blue, 0.4) 70%),
    $yellow;
  // animation: bg 30s infinite;
}

@keyframes bg {
  0%, 100% { background-color: $blue; }
  25% { background-color: $green; }
  50% { background-color: $yellow; }
  75% { background-color: $pink; }
}

.stroke {
  max-width: 400px;
  position: relative;
}

.stroke .border {
  content: "";
  position: absolute;
  opacity: 0;
}
.stroke .border.border-top,
.stroke .border.bottom {
  width: calc(100% - 80px);
}
.stroke .border.border-top {
  border-top: 3px solid orange !important;
  right: 0;
  border-top: 0;
}
.stroke .border.bottom {
  border-bottom: 3px solid orange !important;
  left: 0;
  bottom: 0;
}

.stroke .border.right,
.stroke .border.left {
  height: calc(100% - 120px);
}
.stroke .border.right {
  border-right: 3px solid orange !important;
  right: 0;
  border-top: 0;
}
.stroke .border.left {
  border-left: 3px solid orange !important;
  left: 0;
  bottom: 0;
}

.stroke.is-animated .border {
  opacity: 1;
}

.stroke.is-animated .border.border-top,
.stroke.is-animated .border.bottom {
  animation: stroke-width 2.2s cubic-bezier(0.22, 1, 0.36, 1);
}
.stroke.is-animated .border.right,
.stroke.is-animated .border.left {
  animation: stroke-height 2.2s cubic-bezier(0.22, 1, 0.36, 1);
}

@keyframes stroke-width {
  0% {
    width: 0;
    opacity: 1;
  }
  100% {
    width: calc(100% - 80px);
    opacity: 1;
  }
}

@keyframes stroke-height {
  0% {
    height: 0;
    opacity: 1;
  }
  100% {
    height: calc(100% - 120px);
    opacity: 1;
  }
}

#hoge{
    position: fixed; /* ページ全体を背景に */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; /* ページ全体の高さ */
  z-index: -1; /* 背景要素として後ろに配置 */
  pointer-events: none; /* 背景のクリックを無効にする（任意） */
}

// .canvas_class {
//   position: relative;
//   width: 100%;
//   height: 100vh; /* 画面全体を覆う */
//   overflow: hidden; /* 背景のはみ出しを防ぐ */
// }